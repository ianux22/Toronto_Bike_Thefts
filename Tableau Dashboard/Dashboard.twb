<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20193.19.0821.2225                               -->
<workbook original-version='18.1' source-build='2019.3.0 (20193.19.0821.2225)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts ignorable='true' predowngraded='true' />
    <DashboardGridOverlay />
    <MapboxVectorStylesAndLayers />
    <SavingAnalyticObjects />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <SortTagCleanup />
    <SpatialFileLayer />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='bicycle-thefts.csv+ (Multiple Connections)' inline='true' name='federated.00sdwh80y41dhf1e9zi800g6kbtk' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='bicycle-thefts' name='textscan.02b1zg618n7xm00zwsp2s0xbs0yg'>
            <connection class='textscan' directory='C:/Users/leopa/Google Drive/Projects/Toronto Bicycle Thefts/Tableau' filename='bicycle-thefts.csv' password='' server='' />
          </named-connection>
          <named-connection caption='Neighbourhoods' name='ogrdirect.1tlk6cb145aia51ajx83f0nb8z6m'>
            <connection class='ogrdirect' directory='C:/Users/leopa/Google Drive/Projects/Toronto Bicycle Thefts/Tableau' filename='Neighbourhoods.shp' ogr-grid-shift-folder='C:\Program Files\Tableau\Tableau 2019.3\local\proj4' password='' server='' tablename='' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[bicycle-thefts.csv].[NeighbourhoodName]' />
              <expression op='[Neighbourhoods.shp].[FIELD_7]' />
            </expression>
          </clause>
          <relation connection='textscan.02b1zg618n7xm00zwsp2s0xbs0yg' name='bicycle-thefts.csv' table='[bicycle-thefts#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='_id' ordinal='0' />
              <column datatype='integer' name='Value' ordinal='1' />
              <column datatype='datetime' name='Occurrence_Date' ordinal='2' />
              <column datatype='integer' name='Occurrence_Year' ordinal='3' />
              <column datatype='string' name='Occurrence_Month' ordinal='4' />
              <column datatype='string' name='Occurrence_DayOfWeek' ordinal='5' />
              <column datatype='integer' name='Occurrence_DayOfMonth' ordinal='6' />
              <column datatype='integer' name='Occurrence_DayOfYear' ordinal='7' />
              <column datatype='integer' name='Occurrence_Hour' ordinal='8' />
              <column datatype='string' name='City' ordinal='9' />
              <column datatype='string' name='NeighbourhoodName' ordinal='10' />
              <column datatype='string' name='Neighbourhood' ordinal='11' />
              <column datatype='integer' name='Hood_ID' ordinal='12' />
              <column datatype='string' name='Status' ordinal='13' />
              <column datatype='integer' name='ObjectId2' ordinal='14' />
              <column datatype='string' name='geometry' ordinal='15' />
            </columns>
          </relation>
          <relation connection='ogrdirect.1tlk6cb145aia51ajx83f0nb8z6m' name='Neighbourhoods.shp' table='[Neighbourhoods.shp]' type='table'>
            <columns>
              <column datatype='integer' name='FIELD_1' ordinal='0' />
              <column datatype='integer' name='FIELD_2' ordinal='1' />
              <column datatype='integer' name='FIELD_3' ordinal='2' />
              <column datatype='integer' name='FIELD_4' ordinal='3' />
              <column datatype='integer' name='FIELD_5' ordinal='4' />
              <column datatype='integer' name='FIELD_6' ordinal='5' />
              <column datatype='string' name='FIELD_7' ordinal='6' />
              <column datatype='string' name='FIELD_8' ordinal='7' />
              <column datatype='real' name='FIELD_9' ordinal='8' />
              <column datatype='real' name='FIELD_10' ordinal='9' />
              <column datatype='real' name='FIELD_11' ordinal='10' />
              <column datatype='real' name='FIELD_12' ordinal='11' />
              <column datatype='integer' name='FIELD_13' ordinal='12' />
              <column datatype='real' name='FIELD_14' ordinal='13' />
              <column datatype='real' name='FIELD_15' ordinal='14' />
              <column datatype='spatial' name='Geometry' ordinal='15' />
            </columns>
          </relation>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[bicycle-thefts.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[_id]</local-name>
            <parent-name>[bicycle-thefts.csv]</parent-name>
            <remote-alias>_id</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Value</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Value]</local-name>
            <parent-name>[bicycle-thefts.csv]</parent-name>
            <remote-alias>Value</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Occurrence_Date</remote-name>
            <remote-type>135</remote-type>
            <local-name>[Occurrence_Date]</local-name>
            <parent-name>[bicycle-thefts.csv]</parent-name>
            <remote-alias>Occurrence_Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Occurrence_Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Occurrence_Year]</local-name>
            <parent-name>[bicycle-thefts.csv]</parent-name>
            <remote-alias>Occurrence_Year</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Occurrence_Month</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Occurrence_Month]</local-name>
            <parent-name>[bicycle-thefts.csv]</parent-name>
            <remote-alias>Occurrence_Month</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Occurrence_DayOfWeek</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Occurrence_DayOfWeek]</local-name>
            <parent-name>[bicycle-thefts.csv]</parent-name>
            <remote-alias>Occurrence_DayOfWeek</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Occurrence_DayOfMonth</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Occurrence_DayOfMonth]</local-name>
            <parent-name>[bicycle-thefts.csv]</parent-name>
            <remote-alias>Occurrence_DayOfMonth</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Occurrence_DayOfYear</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Occurrence_DayOfYear]</local-name>
            <parent-name>[bicycle-thefts.csv]</parent-name>
            <remote-alias>Occurrence_DayOfYear</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Occurrence_Hour</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Occurrence_Hour]</local-name>
            <parent-name>[bicycle-thefts.csv]</parent-name>
            <remote-alias>Occurrence_Hour</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>129</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[bicycle-thefts.csv]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NeighbourhoodName</remote-name>
            <remote-type>129</remote-type>
            <local-name>[NeighbourhoodName]</local-name>
            <parent-name>[bicycle-thefts.csv]</parent-name>
            <remote-alias>NeighbourhoodName</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Neighbourhood</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Neighbourhood]</local-name>
            <parent-name>[bicycle-thefts.csv]</parent-name>
            <remote-alias>Neighbourhood</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Hood_ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Hood_ID]</local-name>
            <parent-name>[bicycle-thefts.csv]</parent-name>
            <remote-alias>Hood_ID</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Status</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Status]</local-name>
            <parent-name>[bicycle-thefts.csv]</parent-name>
            <remote-alias>Status</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ObjectId2</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ObjectId2]</local-name>
            <parent-name>[bicycle-thefts.csv]</parent-name>
            <remote-alias>ObjectId2</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>geometry</remote-name>
            <remote-type>129</remote-type>
            <local-name>[geometry]</local-name>
            <parent-name>[bicycle-thefts.csv]</parent-name>
            <remote-alias>geometry</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FIELD_1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[FIELD_1]</local-name>
            <parent-name>[Neighbourhoods.shp]</parent-name>
            <remote-alias>FIELD_1</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FIELD_2</remote-name>
            <remote-type>20</remote-type>
            <local-name>[FIELD_2]</local-name>
            <parent-name>[Neighbourhoods.shp]</parent-name>
            <remote-alias>FIELD_2</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FIELD_3</remote-name>
            <remote-type>20</remote-type>
            <local-name>[FIELD_3]</local-name>
            <parent-name>[Neighbourhoods.shp]</parent-name>
            <remote-alias>FIELD_3</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FIELD_4</remote-name>
            <remote-type>20</remote-type>
            <local-name>[FIELD_4]</local-name>
            <parent-name>[Neighbourhoods.shp]</parent-name>
            <remote-alias>FIELD_4</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FIELD_5</remote-name>
            <remote-type>20</remote-type>
            <local-name>[FIELD_5]</local-name>
            <parent-name>[Neighbourhoods.shp]</parent-name>
            <remote-alias>FIELD_5</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FIELD_6</remote-name>
            <remote-type>20</remote-type>
            <local-name>[FIELD_6]</local-name>
            <parent-name>[Neighbourhoods.shp]</parent-name>
            <remote-alias>FIELD_6</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FIELD_7</remote-name>
            <remote-type>129</remote-type>
            <local-name>[FIELD_7]</local-name>
            <parent-name>[Neighbourhoods.shp]</parent-name>
            <remote-alias>FIELD_7</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FIELD_8</remote-name>
            <remote-type>129</remote-type>
            <local-name>[FIELD_8]</local-name>
            <parent-name>[Neighbourhoods.shp]</parent-name>
            <remote-alias>FIELD_8</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FIELD_9</remote-name>
            <remote-type>5</remote-type>
            <local-name>[FIELD_9]</local-name>
            <parent-name>[Neighbourhoods.shp]</parent-name>
            <remote-alias>FIELD_9</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FIELD_10</remote-name>
            <remote-type>5</remote-type>
            <local-name>[FIELD_10]</local-name>
            <parent-name>[Neighbourhoods.shp]</parent-name>
            <remote-alias>FIELD_10</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FIELD_11</remote-name>
            <remote-type>5</remote-type>
            <local-name>[FIELD_11]</local-name>
            <parent-name>[Neighbourhoods.shp]</parent-name>
            <remote-alias>FIELD_11</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FIELD_12</remote-name>
            <remote-type>5</remote-type>
            <local-name>[FIELD_12]</local-name>
            <parent-name>[Neighbourhoods.shp]</parent-name>
            <remote-alias>FIELD_12</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FIELD_13</remote-name>
            <remote-type>20</remote-type>
            <local-name>[FIELD_13]</local-name>
            <parent-name>[Neighbourhoods.shp]</parent-name>
            <remote-alias>FIELD_13</remote-alias>
            <ordinal>28</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FIELD_14</remote-name>
            <remote-type>5</remote-type>
            <local-name>[FIELD_14]</local-name>
            <parent-name>[Neighbourhoods.shp]</parent-name>
            <remote-alias>FIELD_14</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FIELD_15</remote-name>
            <remote-type>5</remote-type>
            <local-name>[FIELD_15]</local-name>
            <parent-name>[Neighbourhoods.shp]</parent-name>
            <remote-alias>FIELD_15</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Geometry</remote-name>
            <remote-type>8</remote-type>
            <local-name>[Geometry]</local-name>
            <parent-name>[Neighbourhoods.shp]</parent-name>
            <remote-alias>Geometry</remote-alias>
            <ordinal>31</ordinal>
            <local-type>spatial</local-type>
            <aggregation>Collect</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Field 10' datatype='real' name='[FIELD_10]' role='measure' type='quantitative' />
      <column caption='Field 11' datatype='real' name='[FIELD_11]' role='measure' type='quantitative' />
      <column caption='Field 12' datatype='real' name='[FIELD_12]' role='measure' type='quantitative' />
      <column caption='Field 13' datatype='integer' name='[FIELD_13]' role='measure' type='quantitative' />
      <column caption='Field 14' datatype='real' name='[FIELD_14]' role='measure' type='quantitative' />
      <column caption='Field 15' datatype='real' name='[FIELD_15]' role='measure' type='quantitative' />
      <column caption='Field 1' datatype='integer' name='[FIELD_1]' role='measure' type='quantitative' />
      <column caption='Field 2' datatype='integer' name='[FIELD_2]' role='measure' type='quantitative' />
      <column caption='Field 3' datatype='integer' name='[FIELD_3]' role='measure' type='quantitative' />
      <column caption='Field 4' datatype='integer' name='[FIELD_4]' role='measure' type='quantitative' />
      <column caption='Field 5' datatype='integer' name='[FIELD_5]' role='measure' type='quantitative' />
      <column caption='Field 6' datatype='integer' name='[FIELD_6]' role='measure' type='quantitative' />
      <column caption='Field 7' datatype='string' name='[FIELD_7]' role='dimension' type='nominal' />
      <column caption='Field 8' datatype='string' name='[FIELD_8]' role='dimension' type='nominal' />
      <column caption='Field 9' datatype='real' name='[FIELD_9]' role='measure' type='quantitative' />
      <column caption='Geometry1' datatype='spatial' name='[Geometry]' role='measure' type='nominal' />
      <column caption='Hood ID' datatype='integer' name='[Hood_ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Neighbourhood (clusters)]' parent-model='[AnalyticModel:{d8128a1e-0f2e-431c-a929-41ddf8cb8c1b}]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Neighbourhood]' default='&quot;Not Clustered&quot;' new-bin='true'>
          <bin default-name='false' value='&quot;High Risk&quot;'>
            <value>&quot;Bay Street Corridor&quot;</value>
            <value>&quot;Church-Yonge Corridor&quot;</value>
            <value>&quot;Waterfront Communities-The Island&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Low Risk &quot;'>
            <value>&quot;Agincourt North&quot;</value>
            <value>&quot;Agincourt South-Malvern West&quot;</value>
            <value>&quot;Alderwood&quot;</value>
            <value>&quot;Banbury-Don Mills&quot;</value>
            <value>&quot;Bathurst Manor&quot;</value>
            <value>&quot;Bayview Village&quot;</value>
            <value>&quot;Bayview Woods-Steeles&quot;</value>
            <value>&quot;Bedford Park-Nortown&quot;</value>
            <value>&quot;Beechborough-Greenbrook&quot;</value>
            <value>&quot;Bendale&quot;</value>
            <value>&quot;Birchcliffe-Cliffside&quot;</value>
            <value>&quot;Black Creek&quot;</value>
            <value>&quot;Blake-Jones&quot;</value>
            <value>&quot;Briar Hill-Belgravia&quot;</value>
            <value>&quot;Bridle Path-Sunnybrook-York Mills&quot;</value>
            <value>&quot;Broadview North&quot;</value>
            <value>&quot;Brookhaven-Amesbury&quot;</value>
            <value>&quot;Cabbagetown-South St.James Town&quot;</value>
            <value>&quot;Caledonia-Fairbank&quot;</value>
            <value>&quot;Casa Loma&quot;</value>
            <value>&quot;Centennial Scarborough&quot;</value>
            <value>&quot;Clairlea-Birchmount&quot;</value>
            <value>&quot;Clanton Park&quot;</value>
            <value>&quot;Cliffcrest&quot;</value>
            <value>&quot;Corso Italia-Davenport&quot;</value>
            <value>&quot;Danforth&quot;</value>
            <value>&quot;Danforth East York&quot;</value>
            <value>&quot;Don Valley Village&quot;</value>
            <value>&quot;Dorset Park&quot;</value>
            <value>&quot;Downsview-Roding-CFB&quot;</value>
            <value>&quot;Dufferin Grove&quot;</value>
            <value>&quot;East End-Danforth&quot;</value>
            <value>&quot;Edenbridge-Humber Valley&quot;</value>
            <value>&quot;Eglinton East&quot;</value>
            <value>&quot;Elms-Old Rexdale&quot;</value>
            <value>&quot;Englemount-Lawrence&quot;</value>
            <value>&quot;Eringate-Centennial-West Deane&quot;</value>
            <value>&quot;Etobicoke West Mall&quot;</value>
            <value>&quot;Flemingdon Park&quot;</value>
            <value>&quot;Forest Hill North&quot;</value>
            <value>&quot;Forest Hill South&quot;</value>
            <value>&quot;Glenfield-Jane Heights&quot;</value>
            <value>&quot;Greenwood-Coxwell&quot;</value>
            <value>&quot;Guildwood&quot;</value>
            <value>&quot;Henry Farm&quot;</value>
            <value>&quot;High Park North&quot;</value>
            <value>&quot;High Park-Swansea&quot;</value>
            <value>&quot;Highland Creek&quot;</value>
            <value>&quot;Hillcrest Village&quot;</value>
            <value>&quot;Humber Heights-Westmount&quot;</value>
            <value>&quot;Humber Summit&quot;</value>
            <value>&quot;Humbermede&quot;</value>
            <value>&quot;Humewood-Cedarvale&quot;</value>
            <value>&quot;Ionview&quot;</value>
            <value>&quot;Islington-City Centre West&quot;</value>
            <value>&quot;Junction Area&quot;</value>
            <value>&quot;Keelesdale-Eglinton West&quot;</value>
            <value>&quot;Kennedy Park&quot;</value>
            <value>&quot;Kingsview Village-The Westway&quot;</value>
            <value>&quot;Kingsway South&quot;</value>
            <value>&quot;Lambton Baby Point&quot;</value>
            <value>&quot;Lansing-Westgate&quot;</value>
            <value>&quot;Lawrence Park North&quot;</value>
            <value>&quot;Lawrence Park South&quot;</value>
            <value>&quot;Leaside-Bennington&quot;</value>
            <value>&quot;Little Portugal&quot;</value>
            <value>&quot;Long Branch&quot;</value>
            <value>&quot;Malvern&quot;</value>
            <value>&quot;Maple Leaf&quot;</value>
            <value>&quot;Markland Wood&quot;</value>
            <value>&quot;Milliken&quot;</value>
            <value>&quot;Mimico&quot;</value>
            <value>&quot;Morningside&quot;</value>
            <value>&quot;Mount Dennis&quot;</value>
            <value>&quot;Mount Olive-Silverstone-Jamestown&quot;</value>
            <value>&quot;Mount Pleasant East&quot;</value>
            <value>&quot;Mount Pleasant West&quot;</value>
            <value>&quot;New Toronto&quot;</value>
            <value>&quot;Newtonbrook East&quot;</value>
            <value>&quot;Newtonbrook West&quot;</value>
            <value>&quot;North Riverdale&quot;</value>
            <value>&quot;North St.James Town&quot;</value>
            <value>&quot;Oakridge&quot;</value>
            <value>&quot;Oakwood Village&quot;</value>
            <value>&quot;Old East York&quot;</value>
            <value>&quot;Palmerston-Little Italy&quot;</value>
            <value>&quot;Parkwoods-Donalda&quot;</value>
            <value>&quot;Pelmo Park-Humberlea&quot;</value>
            <value>&quot;Playter Estates-Danforth&quot;</value>
            <value>&quot;Pleasant View&quot;</value>
            <value>&quot;Princess-Rosethorn&quot;</value>
            <value>&quot;Regent Park&quot;</value>
            <value>&quot;Rexdale-Kipling&quot;</value>
            <value>&quot;Rockcliffe-Smythe&quot;</value>
            <value>&quot;Roncesvalles&quot;</value>
            <value>&quot;Rosedale-Moore Park&quot;</value>
            <value>&quot;Rouge&quot;</value>
            <value>&quot;Runnymede-Bloor West Village&quot;</value>
            <value>&quot;Rustic&quot;</value>
            <value>&quot;Scarborough Village&quot;</value>
            <value>&quot;South Parkdale&quot;</value>
            <value>&quot;St.Andrew-Windfields&quot;</value>
            <value>&quot;Steeles&quot;</value>
            <value>&quot;Stonegate-Queensway&quot;</value>
            <value>&quot;Taylor-Massey&quot;</value>
            <value>&quot;The Beaches&quot;</value>
            <value>&quot;Thistletown-Beaumond Heights&quot;</value>
            <value>&quot;Thorncliffe Park&quot;</value>
            <value>&quot;Trinity-Bellwoods&quot;</value>
            <value>&quot;Victoria Village&quot;</value>
            <value>&quot;West Hill&quot;</value>
            <value>&quot;West Humber-Clairville&quot;</value>
            <value>&quot;Westminster-Branson&quot;</value>
            <value>&quot;Weston&quot;</value>
            <value>&quot;Weston-Pellam Park&quot;</value>
            <value>&quot;Wexford/Maryvale&quot;</value>
            <value>&quot;Willowdale East&quot;</value>
            <value>&quot;Willowdale West&quot;</value>
            <value>&quot;Willowridge-Martingrove-Richview&quot;</value>
            <value>&quot;Woburn&quot;</value>
            <value>&quot;Woodbine Corridor&quot;</value>
            <value>&quot;Woodbine-Lumsden&quot;</value>
            <value>&quot;Wychwood&quot;</value>
            <value>&quot;Yonge-Eglinton&quot;</value>
            <value>&quot;Yonge-St.Clair&quot;</value>
            <value>&quot;York University Heights&quot;</value>
            <value>&quot;Yorkdale-Glen Park&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Mid-High Risk&quot;'>
            <value>&quot;Annex&quot;</value>
            <value>&quot;Dovercourt-Wallace Emerson-Junction&quot;</value>
            <value>&quot;Kensington-Chinatown&quot;</value>
            <value>&quot;Moss Park&quot;</value>
            <value>&quot;Niagara&quot;</value>
            <value>&quot;South Riverdale&quot;</value>
            <value>&quot;University&quot;</value>
          </bin>
        </calculation>
      </column>
      <column caption='Neighbourhood Name' datatype='string' name='[NeighbourhoodName]' role='dimension' type='nominal' />
      <column datatype='string' name='[Neighbourhood]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[ObjectId2]' role='dimension' type='ordinal' />
      <column caption='Occurrence Date' datatype='datetime' name='[Occurrence_Date]' role='dimension' type='ordinal' />
      <column caption='Occurrence DayOfMonth' datatype='integer' name='[Occurrence_DayOfMonth]' role='dimension' type='quantitative' />
      <column caption='Occurrence DayOfWeek' datatype='string' name='[Occurrence_DayOfWeek]' role='dimension' type='nominal' />
      <column caption='Occurrence DayOfYear' datatype='integer' name='[Occurrence_DayOfYear]' role='dimension' type='quantitative' />
      <column aggregation='Sum' caption='Occurrence Hour' datatype='integer' name='[Occurrence_Hour]' role='dimension' type='ordinal' />
      <column caption='Occurrence Month' datatype='string' name='[Occurrence_Month]' role='dimension' type='nominal' />
      <column caption='Occurrence Year' datatype='integer' name='[Occurrence_Year]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[Value]' role='measure' type='quantitative' />
      <column caption='_Id' datatype='integer' name='[_id]' role='dimension' type='ordinal' />
      <column caption='Geometry' datatype='string' name='[geometry]' role='dimension' type='nominal' />
      <column-instance column='[Occurrence_Date]' derivation='Month' name='[mn:Occurrence_Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Neighbourhood]' derivation='None' name='[none:Neighbourhood:nk]' pivot='key' type='nominal' />
      <column-instance column='[Value]' derivation='Sum' name='[sum:Value:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Occurrence_Date]' derivation='Year-Trunc' name='[tyr:Occurrence_Date:ok]' pivot='key' type='ordinal' />
      <group caption='Action (MONTH(Occurrence Date))' hidden='true' name='[Action (MONTH(Occurrence Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[mn:Occurrence_Date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Neighbourhood (clusters),Neighbourhood)' hidden='true' name='[Action (Neighbourhood (clusters),Neighbourhood)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Neighbourhood (clusters)]' />
          <groupfilter function='level-members' level='[Neighbourhood]' />
        </groupfilter>
      </group>
      <group caption='Action (Neighbourhood Name)' hidden='true' name='[Action (Neighbourhood Name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[NeighbourhoodName]' />
        </groupfilter>
      </group>
      <group caption='Action (Neighbourhood)' hidden='true' name='[Action (Neighbourhood)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Neighbourhood]' />
        </groupfilter>
      </group>
      <group caption='Action (Neighbourhood,YEAR(Occurrence Date))' hidden='true' name='[Action (Neighbourhood,YEAR(Occurrence Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Neighbourhood]' />
          <groupfilter function='level-members' level='[tyr:Occurrence_Date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Occurrence Hour)' hidden='true' name='[Action (Occurrence Hour)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Occurrence_Hour]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.732365' measure-ordering='alphabetic' measure-percentage='0.267635' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[Neighbourhood (clusters)]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Low Risk &quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;High Risk&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mid-High Risk&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[Neighbourhood (clusters)]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Not Clustered&quot;</bucket>
            <bucket>&quot;High Risk&quot;</bucket>
            <bucket>&quot;Low Risk &quot;</bucket>
            <bucket>&quot;Mid-High Risk&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <analytic-model>
        <name>
          <field name='[AnalyticModel:{d8128a1e-0f2e-431c-a929-41ddf8cb8c1b}]' />
        </name>
        <analytic-model-specifications class='cluster-specifications'>
          <analysis-fields>
            <field name='[federated.00sdwh80y41dhf1e9zi800g6kbtk].[sum:Value:qk]' />
          </analysis-fields>
          <filter-fields />
          <lod-fields>
            <field name='[federated.00sdwh80y41dhf1e9zi800g6kbtk].[none:Neighbourhood:nk]' />
          </lod-fields>
          <number-of-desired-clusters>3</number-of-desired-clusters>
          <is-dissagregate>false</is-dissagregate>
        </analytic-model-specifications>
        <result-fields />
      </analytic-model>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Toronto Bike thefts' type='sheet' worksheet='Map' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Toronto Bike thefts' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Toronto Bike thefts' type='sheet' worksheet='Hours' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Toronto Bike thefts' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action3]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Toronto Bike thefts' type='sheet' worksheet='Months' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Toronto Bike thefts' />
      </command>
    </action>
    <action caption='Filter1' name='[Action4]'>
      <source dashboard='Toronto Bike thefts' type='sheet' worksheet='Year' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Toronto Bike thefts' />
      </command>
    </action>
    <action caption='Search Neighbourhood on Google' name='[Action5]'>
      <source dashboard='Toronto Bike thefts' type='sheet' worksheet='Map' />
      <link caption='' expression='https://www.google.com/search?q=&lt;[Neighbourhood]&gt;' />
    </action>
    <action caption='Highlight 1 (generated)' name='[Action6]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Toronto Bike thefts' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Neighbourhood (clusters)' />
        <param name='target' value='Toronto Bike thefts' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action7]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Toronto Bike thefts' type='sheet' worksheet='Year' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Toronto Bike thefts' />
      </command>
    </action>
    <datasources>
      <datasource caption='bicycle-thefts.csv+ (Multiple Connections)' name='federated.00sdwh80y41dhf1e9zi800g6kbtk' />
    </datasources>
    <datasource-dependencies datasource='federated.00sdwh80y41dhf1e9zi800g6kbtk'>
      <column datatype='string' name='[Neighbourhood]' role='dimension' type='nominal' />
    </datasource-dependencies>
  </actions>
  <worksheets>
    <worksheet name='Dayweek'>
      <table>
        <view>
          <datasources>
            <datasource caption='bicycle-thefts.csv+ (Multiple Connections)' name='federated.00sdwh80y41dhf1e9zi800g6kbtk' />
          </datasources>
          <datasource-dependencies datasource='federated.00sdwh80y41dhf1e9zi800g6kbtk'>
            <column caption='Occurrence DayOfWeek' datatype='string' name='[Occurrence_DayOfWeek]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Value]' role='measure' type='quantitative' />
            <column-instance column='[Occurrence_DayOfWeek]' derivation='None' name='[none:Occurrence_DayOfWeek:nk]' pivot='key' type='nominal' />
            <column-instance column='[Value]' derivation='Sum' name='[sum:Value:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.00sdwh80y41dhf1e9zi800g6kbtk].[sum:Value:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.00sdwh80y41dhf1e9zi800g6kbtk].[sum:Value:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.00sdwh80y41dhf1e9zi800g6kbtk].[none:Occurrence_DayOfWeek:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{CD5799AC-39F9-4A6E-B69E-7FEA5F72AA22}' />
    </worksheet>
    <worksheet name='Hours'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Thefts by Hour</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='bicycle-thefts.csv+ (Multiple Connections)' name='federated.00sdwh80y41dhf1e9zi800g6kbtk' />
          </datasources>
          <datasource-dependencies datasource='federated.00sdwh80y41dhf1e9zi800g6kbtk'>
            <column datatype='string' name='[Neighbourhood (clusters)]' parent-model='[AnalyticModel:{d8128a1e-0f2e-431c-a929-41ddf8cb8c1b}]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Neighbourhood]' default='&quot;Not Clustered&quot;' new-bin='true'>
                <bin default-name='false' value='&quot;High Risk&quot;'>
                  <value>&quot;Bay Street Corridor&quot;</value>
                  <value>&quot;Church-Yonge Corridor&quot;</value>
                  <value>&quot;Waterfront Communities-The Island&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Low Risk &quot;'>
                  <value>&quot;Agincourt North&quot;</value>
                  <value>&quot;Agincourt South-Malvern West&quot;</value>
                  <value>&quot;Alderwood&quot;</value>
                  <value>&quot;Banbury-Don Mills&quot;</value>
                  <value>&quot;Bathurst Manor&quot;</value>
                  <value>&quot;Bayview Village&quot;</value>
                  <value>&quot;Bayview Woods-Steeles&quot;</value>
                  <value>&quot;Bedford Park-Nortown&quot;</value>
                  <value>&quot;Beechborough-Greenbrook&quot;</value>
                  <value>&quot;Bendale&quot;</value>
                  <value>&quot;Birchcliffe-Cliffside&quot;</value>
                  <value>&quot;Black Creek&quot;</value>
                  <value>&quot;Blake-Jones&quot;</value>
                  <value>&quot;Briar Hill-Belgravia&quot;</value>
                  <value>&quot;Bridle Path-Sunnybrook-York Mills&quot;</value>
                  <value>&quot;Broadview North&quot;</value>
                  <value>&quot;Brookhaven-Amesbury&quot;</value>
                  <value>&quot;Cabbagetown-South St.James Town&quot;</value>
                  <value>&quot;Caledonia-Fairbank&quot;</value>
                  <value>&quot;Casa Loma&quot;</value>
                  <value>&quot;Centennial Scarborough&quot;</value>
                  <value>&quot;Clairlea-Birchmount&quot;</value>
                  <value>&quot;Clanton Park&quot;</value>
                  <value>&quot;Cliffcrest&quot;</value>
                  <value>&quot;Corso Italia-Davenport&quot;</value>
                  <value>&quot;Danforth&quot;</value>
                  <value>&quot;Danforth East York&quot;</value>
                  <value>&quot;Don Valley Village&quot;</value>
                  <value>&quot;Dorset Park&quot;</value>
                  <value>&quot;Downsview-Roding-CFB&quot;</value>
                  <value>&quot;Dufferin Grove&quot;</value>
                  <value>&quot;East End-Danforth&quot;</value>
                  <value>&quot;Edenbridge-Humber Valley&quot;</value>
                  <value>&quot;Eglinton East&quot;</value>
                  <value>&quot;Elms-Old Rexdale&quot;</value>
                  <value>&quot;Englemount-Lawrence&quot;</value>
                  <value>&quot;Eringate-Centennial-West Deane&quot;</value>
                  <value>&quot;Etobicoke West Mall&quot;</value>
                  <value>&quot;Flemingdon Park&quot;</value>
                  <value>&quot;Forest Hill North&quot;</value>
                  <value>&quot;Forest Hill South&quot;</value>
                  <value>&quot;Glenfield-Jane Heights&quot;</value>
                  <value>&quot;Greenwood-Coxwell&quot;</value>
                  <value>&quot;Guildwood&quot;</value>
                  <value>&quot;Henry Farm&quot;</value>
                  <value>&quot;High Park North&quot;</value>
                  <value>&quot;High Park-Swansea&quot;</value>
                  <value>&quot;Highland Creek&quot;</value>
                  <value>&quot;Hillcrest Village&quot;</value>
                  <value>&quot;Humber Heights-Westmount&quot;</value>
                  <value>&quot;Humber Summit&quot;</value>
                  <value>&quot;Humbermede&quot;</value>
                  <value>&quot;Humewood-Cedarvale&quot;</value>
                  <value>&quot;Ionview&quot;</value>
                  <value>&quot;Islington-City Centre West&quot;</value>
                  <value>&quot;Junction Area&quot;</value>
                  <value>&quot;Keelesdale-Eglinton West&quot;</value>
                  <value>&quot;Kennedy Park&quot;</value>
                  <value>&quot;Kingsview Village-The Westway&quot;</value>
                  <value>&quot;Kingsway South&quot;</value>
                  <value>&quot;Lambton Baby Point&quot;</value>
                  <value>&quot;Lansing-Westgate&quot;</value>
                  <value>&quot;Lawrence Park North&quot;</value>
                  <value>&quot;Lawrence Park South&quot;</value>
                  <value>&quot;Leaside-Bennington&quot;</value>
                  <value>&quot;Little Portugal&quot;</value>
                  <value>&quot;Long Branch&quot;</value>
                  <value>&quot;Malvern&quot;</value>
                  <value>&quot;Maple Leaf&quot;</value>
                  <value>&quot;Markland Wood&quot;</value>
                  <value>&quot;Milliken&quot;</value>
                  <value>&quot;Mimico&quot;</value>
                  <value>&quot;Morningside&quot;</value>
                  <value>&quot;Mount Dennis&quot;</value>
                  <value>&quot;Mount Olive-Silverstone-Jamestown&quot;</value>
                  <value>&quot;Mount Pleasant East&quot;</value>
                  <value>&quot;Mount Pleasant West&quot;</value>
                  <value>&quot;New Toronto&quot;</value>
                  <value>&quot;Newtonbrook East&quot;</value>
                  <value>&quot;Newtonbrook West&quot;</value>
                  <value>&quot;North Riverdale&quot;</value>
                  <value>&quot;North St.James Town&quot;</value>
                  <value>&quot;Oakridge&quot;</value>
                  <value>&quot;Oakwood Village&quot;</value>
                  <value>&quot;Old East York&quot;</value>
                  <value>&quot;Palmerston-Little Italy&quot;</value>
                  <value>&quot;Parkwoods-Donalda&quot;</value>
                  <value>&quot;Pelmo Park-Humberlea&quot;</value>
                  <value>&quot;Playter Estates-Danforth&quot;</value>
                  <value>&quot;Pleasant View&quot;</value>
                  <value>&quot;Princess-Rosethorn&quot;</value>
                  <value>&quot;Regent Park&quot;</value>
                  <value>&quot;Rexdale-Kipling&quot;</value>
                  <value>&quot;Rockcliffe-Smythe&quot;</value>
                  <value>&quot;Roncesvalles&quot;</value>
                  <value>&quot;Rosedale-Moore Park&quot;</value>
                  <value>&quot;Rouge&quot;</value>
                  <value>&quot;Runnymede-Bloor West Village&quot;</value>
                  <value>&quot;Rustic&quot;</value>
                  <value>&quot;Scarborough Village&quot;</value>
                  <value>&quot;South Parkdale&quot;</value>
                  <value>&quot;St.Andrew-Windfields&quot;</value>
                  <value>&quot;Steeles&quot;</value>
                  <value>&quot;Stonegate-Queensway&quot;</value>
                  <value>&quot;Taylor-Massey&quot;</value>
                  <value>&quot;The Beaches&quot;</value>
                  <value>&quot;Thistletown-Beaumond Heights&quot;</value>
                  <value>&quot;Thorncliffe Park&quot;</value>
                  <value>&quot;Trinity-Bellwoods&quot;</value>
                  <value>&quot;Victoria Village&quot;</value>
                  <value>&quot;West Hill&quot;</value>
                  <value>&quot;West Humber-Clairville&quot;</value>
                  <value>&quot;Westminster-Branson&quot;</value>
                  <value>&quot;Weston&quot;</value>
                  <value>&quot;Weston-Pellam Park&quot;</value>
                  <value>&quot;Wexford/Maryvale&quot;</value>
                  <value>&quot;Willowdale East&quot;</value>
                  <value>&quot;Willowdale West&quot;</value>
                  <value>&quot;Willowridge-Martingrove-Richview&quot;</value>
                  <value>&quot;Woburn&quot;</value>
                  <value>&quot;Woodbine Corridor&quot;</value>
                  <value>&quot;Woodbine-Lumsden&quot;</value>
                  <value>&quot;Wychwood&quot;</value>
                  <value>&quot;Yonge-Eglinton&quot;</value>
                  <value>&quot;Yonge-St.Clair&quot;</value>
                  <value>&quot;York University Heights&quot;</value>
                  <value>&quot;Yorkdale-Glen Park&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Mid-High Risk&quot;'>
                  <value>&quot;Annex&quot;</value>
                  <value>&quot;Dovercourt-Wallace Emerson-Junction&quot;</value>
                  <value>&quot;Kensington-Chinatown&quot;</value>
                  <value>&quot;Moss Park&quot;</value>
                  <value>&quot;Niagara&quot;</value>
                  <value>&quot;South Riverdale&quot;</value>
                  <value>&quot;University&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Neighbourhood Name' datatype='string' name='[NeighbourhoodName]' role='dimension' type='nominal' />
            <column datatype='string' name='[Neighbourhood]' role='dimension' type='nominal' />
            <column caption='Occurrence Date' datatype='datetime' name='[Occurrence_Date]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='Occurrence Hour' datatype='integer' name='[Occurrence_Hour]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Value]' role='measure' type='quantitative' />
            <column-instance column='[Occurrence_Date]' derivation='Month' name='[mn:Occurrence_Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Neighbourhood]' derivation='None' name='[none:Neighbourhood:nk]' pivot='key' type='nominal' />
            <column-instance column='[NeighbourhoodName]' derivation='None' name='[none:NeighbourhoodName:nk]' pivot='key' type='nominal' />
            <column-instance column='[Occurrence_Date]' derivation='None' name='[none:Occurrence_Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Occurrence_Hour]' derivation='None' name='[none:Occurrence_Hour:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Value]' derivation='Sum' name='[sum:Value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Occurrence_Date]' derivation='Year-Trunc' name='[tyr:Occurrence_Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00sdwh80y41dhf1e9zi800g6kbtk].[Action (MONTH(Occurrence Date))]'>
            <groupfilter function='level-members' level='[mn:Occurrence_Date:ok]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.00sdwh80y41dhf1e9zi800g6kbtk].[Action (Neighbourhood (clusters),Neighbourhood)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Neighbourhood (clusters)]' />
              <groupfilter function='level-members' level='[Neighbourhood]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.00sdwh80y41dhf1e9zi800g6kbtk].[Action (Neighbourhood Name)]'>
            <groupfilter function='level-members' level='[NeighbourhoodName]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.00sdwh80y41dhf1e9zi800g6kbtk].[Action (Neighbourhood)]'>
            <groupfilter function='level-members' level='[Neighbourhood]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.00sdwh80y41dhf1e9zi800g6kbtk].[Action (Neighbourhood,YEAR(Occurrence Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action7]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Neighbourhood]' />
              <groupfilter function='level-members' level='[tyr:Occurrence_Date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.00sdwh80y41dhf1e9zi800g6kbtk].[Neighbourhood (clusters)]'>
            <groupfilter function='level-members' level='[Neighbourhood (clusters)]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.00sdwh80y41dhf1e9zi800g6kbtk].[none:NeighbourhoodName:nk]'>
            <groupfilter function='level-members' level='[none:NeighbourhoodName:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.00sdwh80y41dhf1e9zi800g6kbtk].[none:Occurrence_Date:qk]' included-values='in-range'>
            <min>#2009-09-01 00:00:00#</min>
            <max>#2020-12-30 00:00:00#</max>
          </filter>
          <slices>
            <column>[federated.00sdwh80y41dhf1e9zi800g6kbtk].[none:NeighbourhoodName:nk]</column>
            <column>[federated.00sdwh80y41dhf1e9zi800g6kbtk].[Action (Neighbourhood Name)]</column>
            <column>[federated.00sdwh80y41dhf1e9zi800g6kbtk].[Action (MONTH(Occurrence Date))]</column>
            <column>[federated.00sdwh80y41dhf1e9zi800g6kbtk].[none:Occurrence_Date:qk]</column>
            <column>[federated.00sdwh80y41dhf1e9zi800g6kbtk].[Action (Neighbourhood)]</column>
            <column>[federated.00sdwh80y41dhf1e9zi800g6kbtk].[Action (Neighbourhood (clusters),Neighbourhood)]</column>
            <column>[federated.00sdwh80y41dhf1e9zi800g6kbtk].[Neighbourhood (clusters)]</column>
            <column>[federated.00sdwh80y41dhf1e9zi800g6kbtk].[Action (Neighbourhood,YEAR(Occurrence Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.00sdwh80y41dhf1e9zi800g6kbtk].[sum:Value:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='color' value='#333333' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f28e2b' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.00sdwh80y41dhf1e9zi800g6kbtk].[sum:Value:qk]</rows>
        <cols>[federated.00sdwh80y41dhf1e9zi800g6kbtk].[none:Occurrence_Hour:ok]</cols>
      </table>
      <simple-id uuid='{F6F2032F-C023-4CBE-9C4E-DFB5320C2CD0}' />
    </worksheet>
    <worksheet name='Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Toronto&apos;s Neighbourhoods</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='bicycle-thefts.csv+ (Multiple Connections)' name='federated.00sdwh80y41dhf1e9zi800g6kbtk' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.00sdwh80y41dhf1e9zi800g6kbtk'>
            <column caption='Geometry1' datatype='spatial' name='[Geometry]' role='measure' type='nominal' />
            <column datatype='string' name='[Neighbourhood (clusters)]' parent-model='[AnalyticModel:{d8128a1e-0f2e-431c-a929-41ddf8cb8c1b}]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Neighbourhood]' default='&quot;Not Clustered&quot;' new-bin='true'>
                <bin default-name='false' value='&quot;High Risk&quot;'>
                  <value>&quot;Bay Street Corridor&quot;</value>
                  <value>&quot;Church-Yonge Corridor&quot;</value>
                  <value>&quot;Waterfront Communities-The Island&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Low Risk &quot;'>
                  <value>&quot;Agincourt North&quot;</value>
                  <value>&quot;Agincourt South-Malvern West&quot;</value>
                  <value>&quot;Alderwood&quot;</value>
                  <value>&quot;Banbury-Don Mills&quot;</value>
                  <value>&quot;Bathurst Manor&quot;</value>
                  <value>&quot;Bayview Village&quot;</value>
                  <value>&quot;Bayview Woods-Steeles&quot;</value>
                  <value>&quot;Bedford Park-Nortown&quot;</value>
                  <value>&quot;Beechborough-Greenbrook&quot;</value>
                  <value>&quot;Bendale&quot;</value>
                  <value>&quot;Birchcliffe-Cliffside&quot;</value>
                  <value>&quot;Black Creek&quot;</value>
                  <value>&quot;Blake-Jones&quot;</value>
                  <value>&quot;Briar Hill-Belgravia&quot;</value>
                  <value>&quot;Bridle Path-Sunnybrook-York Mills&quot;</value>
                  <value>&quot;Broadview North&quot;</value>
                  <value>&quot;Brookhaven-Amesbury&quot;</value>
                  <value>&quot;Cabbagetown-South St.James Town&quot;</value>
                  <value>&quot;Caledonia-Fairbank&quot;</value>
                  <value>&quot;Casa Loma&quot;</value>
                  <value>&quot;Centennial Scarborough&quot;</value>
                  <value>&quot;Clairlea-Birchmount&quot;</value>
                  <value>&quot;Clanton Park&quot;</value>
                  <value>&quot;Cliffcrest&quot;</value>
                  <value>&quot;Corso Italia-Davenport&quot;</value>
                  <value>&quot;Danforth&quot;</value>
                  <value>&quot;Danforth East York&quot;</value>
                  <value>&quot;Don Valley Village&quot;</value>
                  <value>&quot;Dorset Park&quot;</value>
                  <value>&quot;Downsview-Roding-CFB&quot;</value>
                  <value>&quot;Dufferin Grove&quot;</value>
                  <value>&quot;East End-Danforth&quot;</value>
                  <value>&quot;Edenbridge-Humber Valley&quot;</value>
                  <value>&quot;Eglinton East&quot;</value>
                  <value>&quot;Elms-Old Rexdale&quot;</value>
                  <value>&quot;Englemount-Lawrence&quot;</value>
                  <value>&quot;Eringate-Centennial-West Deane&quot;</value>
                  <value>&quot;Etobicoke West Mall&quot;</value>
                  <value>&quot;Flemingdon Park&quot;</value>
                  <value>&quot;Forest Hill North&quot;</value>
                  <value>&quot;Forest Hill South&quot;</value>
                  <value>&quot;Glenfield-Jane Heights&quot;</value>
                  <value>&quot;Greenwood-Coxwell&quot;</value>
                  <value>&quot;Guildwood&quot;</value>
                  <value>&quot;Henry Farm&quot;</value>
                  <value>&quot;High Park North&quot;</value>
                  <value>&quot;High Park-Swansea&quot;</value>
                  <value>&quot;Highland Creek&quot;</value>
                  <value>&quot;Hillcrest Village&quot;</value>
                  <value>&quot;Humber Heights-Westmount&quot;</value>
                  <value>&quot;Humber Summit&quot;</value>
                  <value>&quot;Humbermede&quot;</value>
                  <value>&quot;Humewood-Cedarvale&quot;</value>
                  <value>&quot;Ionview&quot;</value>
                  <value>&quot;Islington-City Centre West&quot;</value>
                  <value>&quot;Junction Area&quot;</value>
                  <value>&quot;Keelesdale-Eglinton West&quot;</value>
                  <value>&quot;Kennedy Park&quot;</value>
                  <value>&quot;Kingsview Village-The Westway&quot;</value>
                  <value>&quot;Kingsway South&quot;</value>
                  <value>&quot;Lambton Baby Point&quot;</value>
                  <value>&quot;Lansing-Westgate&quot;</value>
                  <value>&quot;Lawrence Park North&quot;</value>
                  <value>&quot;Lawrence Park South&quot;</value>
                  <value>&quot;Leaside-Bennington&quot;</value>
                  <value>&quot;Little Portugal&quot;</value>
                  <value>&quot;Long Branch&quot;</value>
                  <value>&quot;Malvern&quot;</value>
                  <value>&quot;Maple Leaf&quot;</value>
                  <value>&quot;Markland Wood&quot;</value>
                  <value>&quot;Milliken&quot;</value>
                  <value>&quot;Mimico&quot;</value>
                  <value>&quot;Morningside&quot;</value>
                  <value>&quot;Mount Dennis&quot;</value>
                  <value>&quot;Mount Olive-Silverstone-Jamestown&quot;</value>
                  <value>&quot;Mount Pleasant East&quot;</value>
                  <value>&quot;Mount Pleasant West&quot;</value>
                  <value>&quot;New Toronto&quot;</value>
                  <value>&quot;Newtonbrook East&quot;</value>
                  <value>&quot;Newtonbrook West&quot;</value>
                  <value>&quot;North Riverdale&quot;</value>
                  <value>&quot;North St.James Town&quot;</value>
                  <value>&quot;Oakridge&quot;</value>
                  <value>&quot;Oakwood Village&quot;</value>
                  <value>&quot;Old East York&quot;</value>
                  <value>&quot;Palmerston-Little Italy&quot;</value>
                  <value>&quot;Parkwoods-Donalda&quot;</value>
                  <value>&quot;Pelmo Park-Humberlea&quot;</value>
                  <value>&quot;Playter Estates-Danforth&quot;</value>
                  <value>&quot;Pleasant View&quot;</value>
                  <value>&quot;Princess-Rosethorn&quot;</value>
                  <value>&quot;Regent Park&quot;</value>
                  <value>&quot;Rexdale-Kipling&quot;</value>
                  <value>&quot;Rockcliffe-Smythe&quot;</value>
                  <value>&quot;Roncesvalles&quot;</value>
                  <value>&quot;Rosedale-Moore Park&quot;</value>
                  <value>&quot;Rouge&quot;</value>
                  <value>&quot;Runnymede-Bloor West Village&quot;</value>
                  <value>&quot;Rustic&quot;</value>
                  <value>&quot;Scarborough Village&quot;</value>
                  <value>&quot;South Parkdale&quot;</value>
                  <value>&quot;St.Andrew-Windfields&quot;</value>
                  <value>&quot;Steeles&quot;</value>
                  <value>&quot;Stonegate-Queensway&quot;</value>
                  <value>&quot;Taylor-Massey&quot;</value>
                  <value>&quot;The Beaches&quot;</value>
                  <value>&quot;Thistletown-Beaumond Heights&quot;</value>
                  <value>&quot;Thorncliffe Park&quot;</value>
                  <value>&quot;Trinity-Bellwoods&quot;</value>
                  <value>&quot;Victoria Village&quot;</value>
                  <value>&quot;West Hill&quot;</value>
                  <value>&quot;West Humber-Clairville&quot;</value>
                  <value>&quot;Westminster-Branson&quot;</value>
                  <value>&quot;Weston&quot;</value>
                  <value>&quot;Weston-Pellam Park&quot;</value>
                  <value>&quot;Wexford/Maryvale&quot;</value>
                  <value>&quot;Willowdale East&quot;</value>
                  <value>&quot;Willowdale West&quot;</value>
                  <value>&quot;Willowridge-Martingrove-Richview&quot;</value>
                  <value>&quot;Woburn&quot;</value>
                  <value>&quot;Woodbine Corridor&quot;</value>
                  <value>&quot;Woodbine-Lumsden&quot;</value>
                  <value>&quot;Wychwood&quot;</value>
                  <value>&quot;Yonge-Eglinton&quot;</value>
                  <value>&quot;Yonge-St.Clair&quot;</value>
                  <value>&quot;York University Heights&quot;</value>
                  <value>&quot;Yorkdale-Glen Park&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Mid-High Risk&quot;'>
                  <value>&quot;Annex&quot;</value>
                  <value>&quot;Dovercourt-Wallace Emerson-Junction&quot;</value>
                  <value>&quot;Kensington-Chinatown&quot;</value>
                  <value>&quot;Moss Park&quot;</value>
                  <value>&quot;Niagara&quot;</value>
                  <value>&quot;South Riverdale&quot;</value>
                  <value>&quot;University&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Neighbourhood Name' datatype='string' name='[NeighbourhoodName]' role='dimension' type='nominal' />
            <column datatype='string' name='[Neighbourhood]' role='dimension' type='nominal' />
            <column caption='Occurrence Date' datatype='datetime' name='[Occurrence_Date]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='Occurrence Hour' datatype='integer' name='[Occurrence_Hour]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Value]' role='measure' type='quantitative' />
            <column-instance column='[Geometry]' derivation='Collect' name='[clct:Geometry:nk]' pivot='key' type='nominal' />
            <column-instance column='[Occurrence_Date]' derivation='Month' name='[mn:Occurrence_Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Neighbourhood]' derivation='None' name='[none:Neighbourhood:nk]' pivot='key' type='nominal' />
            <column-instance column='[NeighbourhoodName]' derivation='None' name='[none:NeighbourhoodName:nk]' pivot='key' type='nominal' />
            <column-instance column='[Occurrence_Date]' derivation='None' name='[none:Occurrence_Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Value]' derivation='Sum' name='[sum:Value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Occurrence_Date]' derivation='Year-Trunc' name='[tyr:Occurrence_Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00sdwh80y41dhf1e9zi800g6kbtk].[Action (MONTH(Occurrence Date))]'>
            <groupfilter function='level-members' level='[mn:Occurrence_Date:ok]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.00sdwh80y41dhf1e9zi800g6kbtk].[Action (Neighbourhood,YEAR(Occurrence Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action7]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Neighbourhood]' />
              <groupfilter function='level-members' level='[tyr:Occurrence_Date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.00sdwh80y41dhf1e9zi800g6kbtk].[Action (Occurrence Hour)]'>
            <groupfilter function='level-members' level='[Occurrence_Hour]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.00sdwh80y41dhf1e9zi800g6kbtk].[Neighbourhood (clusters)]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Not Clustered&quot;</bucket>
              <bucket>&quot;Low Risk &quot;</bucket>
              <bucket>&quot;Mid-High Risk&quot;</bucket>
              <bucket>&quot;High Risk&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.00sdwh80y41dhf1e9zi800g6kbtk].[none:NeighbourhoodName:nk]'>
            <groupfilter function='level-members' level='[none:NeighbourhoodName:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.00sdwh80y41dhf1e9zi800g6kbtk].[none:Occurrence_Date:qk]' included-values='in-range'>
            <min>#2009-09-01 00:00:00#</min>
            <max>#2020-12-30 00:00:00#</max>
          </filter>
          <slices>
            <column>[federated.00sdwh80y41dhf1e9zi800g6kbtk].[none:NeighbourhoodName:nk]</column>
            <column>[federated.00sdwh80y41dhf1e9zi800g6kbtk].[Action (Occurrence Hour)]</column>
            <column>[federated.00sdwh80y41dhf1e9zi800g6kbtk].[Action (MONTH(Occurrence Date))]</column>
            <column>[federated.00sdwh80y41dhf1e9zi800g6kbtk].[none:Occurrence_Date:qk]</column>
            <column>[federated.00sdwh80y41dhf1e9zi800g6kbtk].[Action (Neighbourhood,YEAR(Occurrence Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.00sdwh80y41dhf1e9zi800g6kbtk].[Longitude (generated)]' field-type='quantitative' max='-8787907.4989756644' min='-8890161.3226471245' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.00sdwh80y41dhf1e9zi800g6kbtk].[Latitude (generated)]' field-type='quantitative' max='5447053.5180160264' min='5396659.6098330785' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.00sdwh80y41dhf1e9zi800g6kbtk].[sum:Value:qk]' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='text-align' value='auto' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.00sdwh80y41dhf1e9zi800g6kbtk].[Neighbourhood (clusters)]' />
              <lod column='[federated.00sdwh80y41dhf1e9zi800g6kbtk].[clct:Geometry:nk]' />
              <lod column='[federated.00sdwh80y41dhf1e9zi800g6kbtk].[none:Neighbourhood:nk]' />
              <lod column='[federated.00sdwh80y41dhf1e9zi800g6kbtk].[sum:Value:qk]' />
              <geometry column='[federated.00sdwh80y41dhf1e9zi800g6kbtk].[clct:Geometry:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.00sdwh80y41dhf1e9zi800g6kbtk].[Latitude (generated)]</rows>
        <cols>[federated.00sdwh80y41dhf1e9zi800g6kbtk].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{0F319572-7299-4A14-ACBC-321FE561FA89}' />
    </worksheet>
    <worksheet name='Months'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Thefts by Month</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='bicycle-thefts.csv+ (Multiple Connections)' name='federated.00sdwh80y41dhf1e9zi800g6kbtk' />
          </datasources>
          <datasource-dependencies datasource='federated.00sdwh80y41dhf1e9zi800g6kbtk'>
            <column datatype='string' name='[Neighbourhood (clusters)]' parent-model='[AnalyticModel:{d8128a1e-0f2e-431c-a929-41ddf8cb8c1b}]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Neighbourhood]' default='&quot;Not Clustered&quot;' new-bin='true'>
                <bin default-name='false' value='&quot;High Risk&quot;'>
                  <value>&quot;Bay Street Corridor&quot;</value>
                  <value>&quot;Church-Yonge Corridor&quot;</value>
                  <value>&quot;Waterfront Communities-The Island&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Low Risk &quot;'>
                  <value>&quot;Agincourt North&quot;</value>
                  <value>&quot;Agincourt South-Malvern West&quot;</value>
                  <value>&quot;Alderwood&quot;</value>
                  <value>&quot;Banbury-Don Mills&quot;</value>
                  <value>&quot;Bathurst Manor&quot;</value>
                  <value>&quot;Bayview Village&quot;</value>
                  <value>&quot;Bayview Woods-Steeles&quot;</value>
                  <value>&quot;Bedford Park-Nortown&quot;</value>
                  <value>&quot;Beechborough-Greenbrook&quot;</value>
                  <value>&quot;Bendale&quot;</value>
                  <value>&quot;Birchcliffe-Cliffside&quot;</value>
                  <value>&quot;Black Creek&quot;</value>
                  <value>&quot;Blake-Jones&quot;</value>
                  <value>&quot;Briar Hill-Belgravia&quot;</value>
                  <value>&quot;Bridle Path-Sunnybrook-York Mills&quot;</value>
                  <value>&quot;Broadview North&quot;</value>
                  <value>&quot;Brookhaven-Amesbury&quot;</value>
                  <value>&quot;Cabbagetown-South St.James Town&quot;</value>
                  <value>&quot;Caledonia-Fairbank&quot;</value>
                  <value>&quot;Casa Loma&quot;</value>
                  <value>&quot;Centennial Scarborough&quot;</value>
                  <value>&quot;Clairlea-Birchmount&quot;</value>
                  <value>&quot;Clanton Park&quot;</value>
                  <value>&quot;Cliffcrest&quot;</value>
                  <value>&quot;Corso Italia-Davenport&quot;</value>
                  <value>&quot;Danforth&quot;</value>
                  <value>&quot;Danforth East York&quot;</value>
                  <value>&quot;Don Valley Village&quot;</value>
                  <value>&quot;Dorset Park&quot;</value>
                  <value>&quot;Downsview-Roding-CFB&quot;</value>
                  <value>&quot;Dufferin Grove&quot;</value>
                  <value>&quot;East End-Danforth&quot;</value>
                  <value>&quot;Edenbridge-Humber Valley&quot;</value>
                  <value>&quot;Eglinton East&quot;</value>
                  <value>&quot;Elms-Old Rexdale&quot;</value>
                  <value>&quot;Englemount-Lawrence&quot;</value>
                  <value>&quot;Eringate-Centennial-West Deane&quot;</value>
                  <value>&quot;Etobicoke West Mall&quot;</value>
                  <value>&quot;Flemingdon Park&quot;</value>
                  <value>&quot;Forest Hill North&quot;</value>
                  <value>&quot;Forest Hill South&quot;</value>
                  <value>&quot;Glenfield-Jane Heights&quot;</value>
                  <value>&quot;Greenwood-Coxwell&quot;</value>
                  <value>&quot;Guildwood&quot;</value>
                  <value>&quot;Henry Farm&quot;</value>
                  <value>&quot;High Park North&quot;</value>
                  <value>&quot;High Park-Swansea&quot;</value>
                  <value>&quot;Highland Creek&quot;</value>
                  <value>&quot;Hillcrest Village&quot;</value>
                  <value>&quot;Humber Heights-Westmount&quot;</value>
                  <value>&quot;Humber Summit&quot;</value>
                  <value>&quot;Humbermede&quot;</value>
                  <value>&quot;Humewood-Cedarvale&quot;</value>
                  <value>&quot;Ionview&quot;</value>
                  <value>&quot;Islington-City Centre West&quot;</value>
                  <value>&quot;Junction Area&quot;</value>
                  <value>&quot;Keelesdale-Eglinton West&quot;</value>
                  <value>&quot;Kennedy Park&quot;</value>
                  <value>&quot;Kingsview Village-The Westway&quot;</value>
                  <value>&quot;Kingsway South&quot;</value>
                  <value>&quot;Lambton Baby Point&quot;</value>
                  <value>&quot;Lansing-Westgate&quot;</value>
                  <value>&quot;Lawrence Park North&quot;</value>
                  <value>&quot;Lawrence Park South&quot;</value>
                  <value>&quot;Leaside-Bennington&quot;</value>
                  <value>&quot;Little Portugal&quot;</value>
                  <value>&quot;Long Branch&quot;</value>
                  <value>&quot;Malvern&quot;</value>
                  <value>&quot;Maple Leaf&quot;</value>
                  <value>&quot;Markland Wood&quot;</value>
                  <value>&quot;Milliken&quot;</value>
                  <value>&quot;Mimico&quot;</value>
                  <value>&quot;Morningside&quot;</value>
                  <value>&quot;Mount Dennis&quot;</value>
                  <value>&quot;Mount Olive-Silverstone-Jamestown&quot;</value>
                  <value>&quot;Mount Pleasant East&quot;</value>
                  <value>&quot;Mount Pleasant West&quot;</value>
                  <value>&quot;New Toronto&quot;</value>
                  <value>&quot;Newtonbrook East&quot;</value>
                  <value>&quot;Newtonbrook West&quot;</value>
                  <value>&quot;North Riverdale&quot;</value>
                  <value>&quot;North St.James Town&quot;</value>
                  <value>&quot;Oakridge&quot;</value>
                  <value>&quot;Oakwood Village&quot;</value>
                  <value>&quot;Old East York&quot;</value>
                  <value>&quot;Palmerston-Little Italy&quot;</value>
                  <value>&quot;Parkwoods-Donalda&quot;</value>
                  <value>&quot;Pelmo Park-Humberlea&quot;</value>
                  <value>&quot;Playter Estates-Danforth&quot;</value>
                  <value>&quot;Pleasant View&quot;</value>
                  <value>&quot;Princess-Rosethorn&quot;</value>
                  <value>&quot;Regent Park&quot;</value>
                  <value>&quot;Rexdale-Kipling&quot;</value>
                  <value>&quot;Rockcliffe-Smythe&quot;</value>
                  <value>&quot;Roncesvalles&quot;</value>
                  <value>&quot;Rosedale-Moore Park&quot;</value>
                  <value>&quot;Rouge&quot;</value>
                  <value>&quot;Runnymede-Bloor West Village&quot;</value>
                  <value>&quot;Rustic&quot;</value>
                  <value>&quot;Scarborough Village&quot;</value>
                  <value>&quot;South Parkdale&quot;</value>
                  <value>&quot;St.Andrew-Windfields&quot;</value>
                  <value>&quot;Steeles&quot;</value>
                  <value>&quot;Stonegate-Queensway&quot;</value>
                  <value>&quot;Taylor-Massey&quot;</value>
                  <value>&quot;The Beaches&quot;</value>
                  <value>&quot;Thistletown-Beaumond Heights&quot;</value>
                  <value>&quot;Thorncliffe Park&quot;</value>
                  <value>&quot;Trinity-Bellwoods&quot;</value>
                  <value>&quot;Victoria Village&quot;</value>
                  <value>&quot;West Hill&quot;</value>
                  <value>&quot;West Humber-Clairville&quot;</value>
                  <value>&quot;Westminster-Branson&quot;</value>
                  <value>&quot;Weston&quot;</value>
                  <value>&quot;Weston-Pellam Park&quot;</value>
                  <value>&quot;Wexford/Maryvale&quot;</value>
                  <value>&quot;Willowdale East&quot;</value>
                  <value>&quot;Willowdale West&quot;</value>
                  <value>&quot;Willowridge-Martingrove-Richview&quot;</value>
                  <value>&quot;Woburn&quot;</value>
                  <value>&quot;Woodbine Corridor&quot;</value>
                  <value>&quot;Woodbine-Lumsden&quot;</value>
                  <value>&quot;Wychwood&quot;</value>
                  <value>&quot;Yonge-Eglinton&quot;</value>
                  <value>&quot;Yonge-St.Clair&quot;</value>
                  <value>&quot;York University Heights&quot;</value>
                  <value>&quot;Yorkdale-Glen Park&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Mid-High Risk&quot;'>
                  <value>&quot;Annex&quot;</value>
                  <value>&quot;Dovercourt-Wallace Emerson-Junction&quot;</value>
                  <value>&quot;Kensington-Chinatown&quot;</value>
                  <value>&quot;Moss Park&quot;</value>
                  <value>&quot;Niagara&quot;</value>
                  <value>&quot;South Riverdale&quot;</value>
                  <value>&quot;University&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Neighbourhood Name' datatype='string' name='[NeighbourhoodName]' role='dimension' type='nominal' />
            <column datatype='string' name='[Neighbourhood]' role='dimension' type='nominal' />
            <column caption='Occurrence Date' datatype='datetime' name='[Occurrence_Date]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='Occurrence Hour' datatype='integer' name='[Occurrence_Hour]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Value]' role='measure' type='quantitative' />
            <column-instance column='[Occurrence_Date]' derivation='Month' name='[mn:Occurrence_Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Neighbourhood]' derivation='None' name='[none:Neighbourhood:nk]' pivot='key' type='nominal' />
            <column-instance column='[NeighbourhoodName]' derivation='None' name='[none:NeighbourhoodName:nk]' pivot='key' type='nominal' />
            <column-instance column='[Occurrence_Date]' derivation='None' name='[none:Occurrence_Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Value]' derivation='Sum' name='[sum:Value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Occurrence_Date]' derivation='Year-Trunc' name='[tyr:Occurrence_Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00sdwh80y41dhf1e9zi800g6kbtk].[Action (Neighbourhood (clusters),Neighbourhood)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Neighbourhood (clusters)]' />
              <groupfilter function='level-members' level='[Neighbourhood]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.00sdwh80y41dhf1e9zi800g6kbtk].[Action (Neighbourhood Name)]'>
            <groupfilter function='level-members' level='[NeighbourhoodName]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.00sdwh80y41dhf1e9zi800g6kbtk].[Action (Neighbourhood)]'>
            <groupfilter function='level-members' level='[Neighbourhood]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.00sdwh80y41dhf1e9zi800g6kbtk].[Action (Neighbourhood,YEAR(Occurrence Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action7]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Neighbourhood]' />
              <groupfilter function='level-members' level='[tyr:Occurrence_Date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.00sdwh80y41dhf1e9zi800g6kbtk].[Action (Occurrence Hour)]'>
            <groupfilter function='level-members' level='[Occurrence_Hour]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.00sdwh80y41dhf1e9zi800g6kbtk].[Neighbourhood (clusters)]'>
            <groupfilter function='level-members' level='[Neighbourhood (clusters)]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.00sdwh80y41dhf1e9zi800g6kbtk].[none:NeighbourhoodName:nk]'>
            <groupfilter function='level-members' level='[none:NeighbourhoodName:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.00sdwh80y41dhf1e9zi800g6kbtk].[none:Occurrence_Date:qk]' included-values='in-range'>
            <min>#2014-01-01 00:00:00#</min>
            <max>#2020-12-30 00:00:00#</max>
          </filter>
          <slices>
            <column>[federated.00sdwh80y41dhf1e9zi800g6kbtk].[none:Occurrence_Date:qk]</column>
            <column>[federated.00sdwh80y41dhf1e9zi800g6kbtk].[none:NeighbourhoodName:nk]</column>
            <column>[federated.00sdwh80y41dhf1e9zi800g6kbtk].[Action (Neighbourhood Name)]</column>
            <column>[federated.00sdwh80y41dhf1e9zi800g6kbtk].[Action (Occurrence Hour)]</column>
            <column>[federated.00sdwh80y41dhf1e9zi800g6kbtk].[Action (Neighbourhood)]</column>
            <column>[federated.00sdwh80y41dhf1e9zi800g6kbtk].[Action (Neighbourhood (clusters),Neighbourhood)]</column>
            <column>[federated.00sdwh80y41dhf1e9zi800g6kbtk].[Neighbourhood (clusters)]</column>
            <column>[federated.00sdwh80y41dhf1e9zi800g6kbtk].[Action (Neighbourhood,YEAR(Occurrence Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.00sdwh80y41dhf1e9zi800g6kbtk].[mn:Occurrence_Date:ok]' value='75' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.00sdwh80y41dhf1e9zi800g6kbtk].[sum:Value:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
                <format attr='mark-color' value='#69aaa5' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.00sdwh80y41dhf1e9zi800g6kbtk].[sum:Value:qk]</rows>
        <cols>[federated.00sdwh80y41dhf1e9zi800g6kbtk].[mn:Occurrence_Date:ok]</cols>
      </table>
      <simple-id uuid='{3884C1B9-6012-48BF-997D-77AD92447A40}' />
    </worksheet>
    <worksheet name='Year'>
      <table>
        <view>
          <datasources>
            <datasource caption='bicycle-thefts.csv+ (Multiple Connections)' name='federated.00sdwh80y41dhf1e9zi800g6kbtk' />
          </datasources>
          <datasource-dependencies datasource='federated.00sdwh80y41dhf1e9zi800g6kbtk'>
            <column datatype='string' name='[Neighbourhood (clusters)]' parent-model='[AnalyticModel:{d8128a1e-0f2e-431c-a929-41ddf8cb8c1b}]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Neighbourhood]' default='&quot;Not Clustered&quot;' new-bin='true'>
                <bin default-name='false' value='&quot;High Risk&quot;'>
                  <value>&quot;Bay Street Corridor&quot;</value>
                  <value>&quot;Church-Yonge Corridor&quot;</value>
                  <value>&quot;Waterfront Communities-The Island&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Low Risk &quot;'>
                  <value>&quot;Agincourt North&quot;</value>
                  <value>&quot;Agincourt South-Malvern West&quot;</value>
                  <value>&quot;Alderwood&quot;</value>
                  <value>&quot;Banbury-Don Mills&quot;</value>
                  <value>&quot;Bathurst Manor&quot;</value>
                  <value>&quot;Bayview Village&quot;</value>
                  <value>&quot;Bayview Woods-Steeles&quot;</value>
                  <value>&quot;Bedford Park-Nortown&quot;</value>
                  <value>&quot;Beechborough-Greenbrook&quot;</value>
                  <value>&quot;Bendale&quot;</value>
                  <value>&quot;Birchcliffe-Cliffside&quot;</value>
                  <value>&quot;Black Creek&quot;</value>
                  <value>&quot;Blake-Jones&quot;</value>
                  <value>&quot;Briar Hill-Belgravia&quot;</value>
                  <value>&quot;Bridle Path-Sunnybrook-York Mills&quot;</value>
                  <value>&quot;Broadview North&quot;</value>
                  <value>&quot;Brookhaven-Amesbury&quot;</value>
                  <value>&quot;Cabbagetown-South St.James Town&quot;</value>
                  <value>&quot;Caledonia-Fairbank&quot;</value>
                  <value>&quot;Casa Loma&quot;</value>
                  <value>&quot;Centennial Scarborough&quot;</value>
                  <value>&quot;Clairlea-Birchmount&quot;</value>
                  <value>&quot;Clanton Park&quot;</value>
                  <value>&quot;Cliffcrest&quot;</value>
                  <value>&quot;Corso Italia-Davenport&quot;</value>
                  <value>&quot;Danforth&quot;</value>
                  <value>&quot;Danforth East York&quot;</value>
                  <value>&quot;Don Valley Village&quot;</value>
                  <value>&quot;Dorset Park&quot;</value>
                  <value>&quot;Downsview-Roding-CFB&quot;</value>
                  <value>&quot;Dufferin Grove&quot;</value>
                  <value>&quot;East End-Danforth&quot;</value>
                  <value>&quot;Edenbridge-Humber Valley&quot;</value>
                  <value>&quot;Eglinton East&quot;</value>
                  <value>&quot;Elms-Old Rexdale&quot;</value>
                  <value>&quot;Englemount-Lawrence&quot;</value>
                  <value>&quot;Eringate-Centennial-West Deane&quot;</value>
                  <value>&quot;Etobicoke West Mall&quot;</value>
                  <value>&quot;Flemingdon Park&quot;</value>
                  <value>&quot;Forest Hill North&quot;</value>
                  <value>&quot;Forest Hill South&quot;</value>
                  <value>&quot;Glenfield-Jane Heights&quot;</value>
                  <value>&quot;Greenwood-Coxwell&quot;</value>
                  <value>&quot;Guildwood&quot;</value>
                  <value>&quot;Henry Farm&quot;</value>
                  <value>&quot;High Park North&quot;</value>
                  <value>&quot;High Park-Swansea&quot;</value>
                  <value>&quot;Highland Creek&quot;</value>
                  <value>&quot;Hillcrest Village&quot;</value>
                  <value>&quot;Humber Heights-Westmount&quot;</value>
                  <value>&quot;Humber Summit&quot;</value>
                  <value>&quot;Humbermede&quot;</value>
                  <value>&quot;Humewood-Cedarvale&quot;</value>
                  <value>&quot;Ionview&quot;</value>
                  <value>&quot;Islington-City Centre West&quot;</value>
                  <value>&quot;Junction Area&quot;</value>
                  <value>&quot;Keelesdale-Eglinton West&quot;</value>
                  <value>&quot;Kennedy Park&quot;</value>
                  <value>&quot;Kingsview Village-The Westway&quot;</value>
                  <value>&quot;Kingsway South&quot;</value>
                  <value>&quot;Lambton Baby Point&quot;</value>
                  <value>&quot;Lansing-Westgate&quot;</value>
                  <value>&quot;Lawrence Park North&quot;</value>
                  <value>&quot;Lawrence Park South&quot;</value>
                  <value>&quot;Leaside-Bennington&quot;</value>
                  <value>&quot;Little Portugal&quot;</value>
                  <value>&quot;Long Branch&quot;</value>
                  <value>&quot;Malvern&quot;</value>
                  <value>&quot;Maple Leaf&quot;</value>
                  <value>&quot;Markland Wood&quot;</value>
                  <value>&quot;Milliken&quot;</value>
                  <value>&quot;Mimico&quot;</value>
                  <value>&quot;Morningside&quot;</value>
                  <value>&quot;Mount Dennis&quot;</value>
                  <value>&quot;Mount Olive-Silverstone-Jamestown&quot;</value>
                  <value>&quot;Mount Pleasant East&quot;</value>
                  <value>&quot;Mount Pleasant West&quot;</value>
                  <value>&quot;New Toronto&quot;</value>
                  <value>&quot;Newtonbrook East&quot;</value>
                  <value>&quot;Newtonbrook West&quot;</value>
                  <value>&quot;North Riverdale&quot;</value>
                  <value>&quot;North St.James Town&quot;</value>
                  <value>&quot;Oakridge&quot;</value>
                  <value>&quot;Oakwood Village&quot;</value>
                  <value>&quot;Old East York&quot;</value>
                  <value>&quot;Palmerston-Little Italy&quot;</value>
                  <value>&quot;Parkwoods-Donalda&quot;</value>
                  <value>&quot;Pelmo Park-Humberlea&quot;</value>
                  <value>&quot;Playter Estates-Danforth&quot;</value>
                  <value>&quot;Pleasant View&quot;</value>
                  <value>&quot;Princess-Rosethorn&quot;</value>
                  <value>&quot;Regent Park&quot;</value>
                  <value>&quot;Rexdale-Kipling&quot;</value>
                  <value>&quot;Rockcliffe-Smythe&quot;</value>
                  <value>&quot;Roncesvalles&quot;</value>
                  <value>&quot;Rosedale-Moore Park&quot;</value>
                  <value>&quot;Rouge&quot;</value>
                  <value>&quot;Runnymede-Bloor West Village&quot;</value>
                  <value>&quot;Rustic&quot;</value>
                  <value>&quot;Scarborough Village&quot;</value>
                  <value>&quot;South Parkdale&quot;</value>
                  <value>&quot;St.Andrew-Windfields&quot;</value>
                  <value>&quot;Steeles&quot;</value>
                  <value>&quot;Stonegate-Queensway&quot;</value>
                  <value>&quot;Taylor-Massey&quot;</value>
                  <value>&quot;The Beaches&quot;</value>
                  <value>&quot;Thistletown-Beaumond Heights&quot;</value>
                  <value>&quot;Thorncliffe Park&quot;</value>
                  <value>&quot;Trinity-Bellwoods&quot;</value>
                  <value>&quot;Victoria Village&quot;</value>
                  <value>&quot;West Hill&quot;</value>
                  <value>&quot;West Humber-Clairville&quot;</value>
                  <value>&quot;Westminster-Branson&quot;</value>
                  <value>&quot;Weston&quot;</value>
                  <value>&quot;Weston-Pellam Park&quot;</value>
                  <value>&quot;Wexford/Maryvale&quot;</value>
                  <value>&quot;Willowdale East&quot;</value>
                  <value>&quot;Willowdale West&quot;</value>
                  <value>&quot;Willowridge-Martingrove-Richview&quot;</value>
                  <value>&quot;Woburn&quot;</value>
                  <value>&quot;Woodbine Corridor&quot;</value>
                  <value>&quot;Woodbine-Lumsden&quot;</value>
                  <value>&quot;Wychwood&quot;</value>
                  <value>&quot;Yonge-Eglinton&quot;</value>
                  <value>&quot;Yonge-St.Clair&quot;</value>
                  <value>&quot;York University Heights&quot;</value>
                  <value>&quot;Yorkdale-Glen Park&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Mid-High Risk&quot;'>
                  <value>&quot;Annex&quot;</value>
                  <value>&quot;Dovercourt-Wallace Emerson-Junction&quot;</value>
                  <value>&quot;Kensington-Chinatown&quot;</value>
                  <value>&quot;Moss Park&quot;</value>
                  <value>&quot;Niagara&quot;</value>
                  <value>&quot;South Riverdale&quot;</value>
                  <value>&quot;University&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Neighbourhood Name' datatype='string' name='[NeighbourhoodName]' role='dimension' type='nominal' />
            <column datatype='string' name='[Neighbourhood]' role='dimension' type='nominal' />
            <column caption='Occurrence Date' datatype='datetime' name='[Occurrence_Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Value]' role='measure' type='quantitative' />
            <column-instance column='[Occurrence_Date]' derivation='Month' name='[mn:Occurrence_Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Neighbourhood]' derivation='None' name='[none:Neighbourhood:nk]' pivot='key' type='nominal' />
            <column-instance column='[NeighbourhoodName]' derivation='None' name='[none:NeighbourhoodName:nk]' pivot='key' type='nominal' />
            <column-instance column='[Value]' derivation='Sum' name='[sum:Value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Occurrence_Date]' derivation='Year-Trunc' name='[tyr:Occurrence_Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Occurrence_Date]' derivation='Year' name='[yr:Occurrence_Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00sdwh80y41dhf1e9zi800g6kbtk].[Action (MONTH(Occurrence Date))]'>
            <groupfilter function='level-members' level='[mn:Occurrence_Date:ok]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.00sdwh80y41dhf1e9zi800g6kbtk].[Action (Neighbourhood (clusters),Neighbourhood)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Neighbourhood (clusters)]' />
              <groupfilter function='level-members' level='[Neighbourhood]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.00sdwh80y41dhf1e9zi800g6kbtk].[Action (Neighbourhood Name)]'>
            <groupfilter function='level-members' level='[NeighbourhoodName]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.00sdwh80y41dhf1e9zi800g6kbtk].[Action (Neighbourhood)]'>
            <groupfilter function='level-members' level='[Neighbourhood]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.00sdwh80y41dhf1e9zi800g6kbtk].[Neighbourhood (clusters)]'>
            <groupfilter function='level-members' level='[Neighbourhood (clusters)]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.00sdwh80y41dhf1e9zi800g6kbtk].[none:Neighbourhood:nk]'>
            <groupfilter function='level-members' level='[none:Neighbourhood:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <alphabetic-sort column='[federated.00sdwh80y41dhf1e9zi800g6kbtk].[none:Neighbourhood:nk]' direction='ASC' />
          <filter class='categorical' column='[federated.00sdwh80y41dhf1e9zi800g6kbtk].[none:NeighbourhoodName:nk]'>
            <groupfilter function='level-members' level='[none:NeighbourhoodName:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.00sdwh80y41dhf1e9zi800g6kbtk].[tyr:Occurrence_Date:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[tyr:Occurrence_Date:ok]' />
              <groupfilter from='#2009-01-01 00:00:00#' function='range' level='[tyr:Occurrence_Date:ok]' to='#2015-01-01 00:00:00#' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.00sdwh80y41dhf1e9zi800g6kbtk].[yr:Occurrence_Date:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:Occurrence_Date:ok]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[yr:Occurrence_Date:ok]' member='2009' />
                <groupfilter function='member' level='[yr:Occurrence_Date:ok]' member='2010' />
                <groupfilter function='member' level='[yr:Occurrence_Date:ok]' member='2011' />
                <groupfilter function='member' level='[yr:Occurrence_Date:ok]' member='2012' />
                <groupfilter function='member' level='[yr:Occurrence_Date:ok]' member='2013' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.00sdwh80y41dhf1e9zi800g6kbtk].[yr:Occurrence_Date:ok]</column>
            <column>[federated.00sdwh80y41dhf1e9zi800g6kbtk].[none:NeighbourhoodName:nk]</column>
            <column>[federated.00sdwh80y41dhf1e9zi800g6kbtk].[Action (Neighbourhood Name)]</column>
            <column>[federated.00sdwh80y41dhf1e9zi800g6kbtk].[tyr:Occurrence_Date:ok]</column>
            <column>[federated.00sdwh80y41dhf1e9zi800g6kbtk].[Action (MONTH(Occurrence Date))]</column>
            <column>[federated.00sdwh80y41dhf1e9zi800g6kbtk].[none:Neighbourhood:nk]</column>
            <column>[federated.00sdwh80y41dhf1e9zi800g6kbtk].[Action (Neighbourhood)]</column>
            <column>[federated.00sdwh80y41dhf1e9zi800g6kbtk].[Neighbourhood (clusters)]</column>
            <column>[federated.00sdwh80y41dhf1e9zi800g6kbtk].[Action (Neighbourhood (clusters),Neighbourhood)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.00sdwh80y41dhf1e9zi800g6kbtk].[tyr:Occurrence_Date:ok]' value='51' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.00sdwh80y41dhf1e9zi800g6kbtk].[none:Neighbourhood:nk]' value='132' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.00sdwh80y41dhf1e9zi800g6kbtk].[sum:Value:qk]' palette='red_gold_10_0' type='interpolated' />
            <encoding attr='size-bar' field='[federated.00sdwh80y41dhf1e9zi800g6kbtk].[sum:Value:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#ffffff' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#ffffff' />
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.00sdwh80y41dhf1e9zi800g6kbtk].[sum:Value:qk]' />
              <text column='[federated.00sdwh80y41dhf1e9zi800g6kbtk].[sum:Value:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='false' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.00sdwh80y41dhf1e9zi800g6kbtk].[none:Neighbourhood:nk]</rows>
        <cols>[federated.00sdwh80y41dhf1e9zi800g6kbtk].[tyr:Occurrence_Date:ok]</cols>
      </table>
      <simple-id uuid='{43FECA50-FAB0-4F64-AB74-A6D9BE73E0F7}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Toronto Bike thefts'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='34' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='27' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
              <zone fixed-size='24' h='4000' id='28' is-fixed='true' type='title' w='98400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='94000' id='25' param='horz' type='layout-flow' w='98400' x='800' y='5000'>
                <zone h='94000' id='23' param='horz' type='layout-flow' w='98400' x='800' y='5000'>
                  <zone h='94000' id='21' param='horz' type='layout-flow' w='98400' x='800' y='5000'>
                    <zone h='94000' id='19' param='horz' type='layout-flow' w='98400' x='800' y='5000'>
                      <zone h='94000' id='15' param='horz' type='layout-flow' w='98400' x='800' y='5000'>
                        <zone h='94000' id='7' param='horz' type='layout-flow' w='98400' x='800' y='5000'>
                          <zone h='94000' id='5' type='layout-basic' w='98400' x='800' y='5000'>
                            <zone h='40919' id='3' name='Map' w='56717' x='800' y='12220'>
                              <zone-style>
                                <format attr='border-color' value='#000000' />
                                <format attr='border-style' value='none' />
                                <format attr='border-width' value='0' />
                                <format attr='margin' value='4' />
                              </zone-style>
                            </zone>
                            <zone h='24610' id='11' name='Months' w='98400' x='800' y='53139'>
                              <zone-style>
                                <format attr='border-color' value='#000000' />
                                <format attr='border-style' value='none' />
                                <format attr='border-width' value='0' />
                                <format attr='margin' value='4' />
                                <format attr='background-color' value='#aaaaff' />
                              </zone-style>
                            </zone>
                            <zone h='21251' id='13' name='Hours' w='98400' x='800' y='77749'>
                              <zone-style>
                                <format attr='border-color' value='#000000' />
                                <format attr='border-style' value='none' />
                                <format attr='border-width' value='0' />
                                <format attr='margin' value='4' />
                              </zone-style>
                            </zone>
                            <zone h='7220' id='16' name='Map' pane-specification-id='0' param='[federated.00sdwh80y41dhf1e9zi800g6kbtk].[Neighbourhood (clusters)]' type='color' w='56717' x='800' y='5000'>
                              <zone-style>
                                <format attr='border-color' value='#000000' />
                                <format attr='border-style' value='none' />
                                <format attr='border-width' value='0' />
                                <format attr='margin' value='4' />
                              </zone-style>
                            </zone>
                            <zone h='48139' id='17' name='Year' show-title='false' w='41683' x='57517' y='5000'>
                              <zone-style>
                                <format attr='border-color' value='#000000' />
                                <format attr='border-style' value='none' />
                                <format attr='border-width' value='0' />
                                <format attr='margin' value='4' />
                                <format attr='background-color' value='#aaaaff' />
                              </zone-style>
                            </zone>
                          </zone>
                        </zone>
                      </zone>
                    </zone>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
            <format attr='background-color' value='#aaaaff' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' fontalignment='1'>&lt;Sheet Name&gt;</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1100' minheight='1100' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='35' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='36' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='24' h='4000' id='28' type='title' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48139' id='17' is-fixed='true' name='Year' show-title='false' w='41683' x='57517' y='5000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#aaaaff' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='40919' id='3' is-fixed='true' name='Map' w='56717' x='800' y='12220'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7220' id='16' name='Map' pane-specification-id='0' param='[federated.00sdwh80y41dhf1e9zi800g6kbtk].[Neighbourhood (clusters)]' type='color' w='56717' x='800' y='5000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='189' h='24610' id='11' is-fixed='true' name='Months' w='98400' x='800' y='53139'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#aaaaff' />
                  </zone-style>
                </zone>
                <zone fixed-size='162' h='21251' id='13' is-fixed='true' name='Hours' w='98400' x='800' y='77749'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{1572322B-122E-436E-93F7-5E3CE3E34BED}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.00sdwh80y41dhf1e9zi800g6kbtk].[Neighbourhood (clusters)]' type='filter' />
            <card param='[federated.00sdwh80y41dhf1e9zi800g6kbtk].[none:NeighbourhoodName:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.00sdwh80y41dhf1e9zi800g6kbtk].[sum:Value:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.00sdwh80y41dhf1e9zi800g6kbtk].[Neighbourhood (clusters)]</field>
            <field>[federated.00sdwh80y41dhf1e9zi800g6kbtk].[none:Neighbourhood:nk]</field>
            <field>[federated.00sdwh80y41dhf1e9zi800g6kbtk].[none:NeighbourhoodName:nk]</field>
            <field>[federated.00sdwh80y41dhf1e9zi800g6kbtk].[tyr:Occurrence_Date:ok]</field>
            <field>[federated.00sdwh80y41dhf1e9zi800g6kbtk].[yr:Occurrence_Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A95C0F95-D942-4F04-8CEE-3D67C67390DE}' />
    </window>
    <window class='worksheet' name='Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.00sdwh80y41dhf1e9zi800g6kbtk].[Neighbourhood (clusters)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.00sdwh80y41dhf1e9zi800g6kbtk].[none:Neighbourhood:nk]</field>
            <field>[federated.00sdwh80y41dhf1e9zi800g6kbtk].[none:NeighbourhoodName:nk]</field>
            <field>[federated.00sdwh80y41dhf1e9zi800g6kbtk].[none:Occurrence_Date:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{86749DDC-1312-4DD0-BB5E-C4E598FCD6E1}' />
    </window>
    <window class='worksheet' name='Hours'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.00sdwh80y41dhf1e9zi800g6kbtk].[Neighbourhood (clusters)]</field>
            <field>[federated.00sdwh80y41dhf1e9zi800g6kbtk].[none:NeighbourhoodName:nk]</field>
            <field>[federated.00sdwh80y41dhf1e9zi800g6kbtk].[none:Occurrence_Date:qk]</field>
            <field>[federated.00sdwh80y41dhf1e9zi800g6kbtk].[none:Occurrence_Hour:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{B8FD81F9-6AD6-4AB4-8FE9-ACF23CDE2BDC}' />
    </window>
    <window class='worksheet' name='Dayweek'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.00sdwh80y41dhf1e9zi800g6kbtk].[none:NeighbourhoodName:nk]</field>
            <field>[federated.00sdwh80y41dhf1e9zi800g6kbtk].[none:Occurrence_DayOfWeek:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8DA9B3EB-42DD-4477-BAA4-0D1F431A481D}' />
    </window>
    <window class='worksheet' name='Months'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.00sdwh80y41dhf1e9zi800g6kbtk].[Neighbourhood (clusters)]</field>
            <field>[federated.00sdwh80y41dhf1e9zi800g6kbtk].[mn:Occurrence_Date:ok]</field>
            <field>[federated.00sdwh80y41dhf1e9zi800g6kbtk].[none:NeighbourhoodName:nk]</field>
            <field>[federated.00sdwh80y41dhf1e9zi800g6kbtk].[none:Occurrence_Date:qk]</field>
            <field>[federated.00sdwh80y41dhf1e9zi800g6kbtk].[yr:Occurrence_Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5AD4A19B-1FC6-4317-A259-3BA66CF6401D}' />
    </window>
    <window class='dashboard' maximized='true' name='Toronto Bike thefts'>
      <viewpoints>
        <viewpoint name='Hours'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Map'>
          <zoom type='entire-view' />
          <highlight field='[federated.00sdwh80y41dhf1e9zi800g6kbtk].[Neighbourhood (clusters)]'>
            <bucket-selection />
          </highlight>
          <default-map-tool-selection tool='2' />
        </viewpoint>
        <viewpoint name='Months' />
        <viewpoint name='Year' />
      </viewpoints>
      <active id='-1' />
      <grid grid-overlay-mode='on' />
      <simple-id uuid='{9C48019B-4C25-4404-A5F0-D8177CBE3A99}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='164' name='Dayweek' width='144'>
      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
      /n+tnrcmjQcJwAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Hours' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Map' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Months' width='192'>
      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
      ii9C+f57qKpyR1H6F7whb31DPoriP8NQ5uVwh4PF+UnmDWYyFVIUX2zy/bf425rcbZfrovjI
      6jyX+gdYSZZjUZqYnpggoZo4fKSTG70XpChe/I17BKDYiuJtlXU8ceLUxnJT066N11IULwqd
      3AskNE0CIDRNAiA0TQIgNE0CIDRNAiA0TQIgNE0CIDRNAiA0TQIgNE0CIDRNAiA0TQIgNE0C
      IDRNAiA0LfsAqBlmx66xHE4BCqNXLzE4OocKzI0M0n91lIwKC5PX6f3kBqnimDBMaET2RfHr
      a2BMsxJMYQ5NELE3YlufYm42yUzMSWNpmOmpMeaX9bRWKUzML9PWUJ2LsWtOOBzmtddew263
      09nZyR/+8AeSySSnTp1icHCQYDDIc889h91u3+mhFo3si+IdlXhYYywI63EddZ4y9DYXy1Or
      uHa1U4GVmflbOD2HqHBEWF5NkslkUBRl45/YnOHhYfbu3YvP58Nms/HSSy9x5swZrFYrPT09
      +Hw+RkdH6ejouO8+1DwXpStKhmQy+eX9K/nuX7mj/5wWxdstKuOLa9jWl7DVupiZX8JaGqbE
      Wceyf45ASsFkcmEwGDAYDKTTaQwGg9QEb5LX6+W3v/0tACdOnCAcDmOz2airq2NoaIhoNEp3
      dzcmk+m++8j330KvN1BSUvLl/evz3b/+jv6zPgaIrM5zoX+CubHLxB0N2NaniZc2UF/fTKM1
      hD9eSmNTC63VClMhPS11hT9haqGanp6mq6uL+vp6/H4/vb29HD16lPn5eYaGhvB6vXf9dhWf
      l5Oi+MeerNtYdnU9uPG6fs8D1P//a3fzPtzZdqZxhw8fpq+vj927d9Pc3IzVasVms5HJZKis
      rGR0dJSysjJsNttOD7VoyNSIRcRkMt0xq1ptbS0AZWVlnDhxYqeGVdQkAAVmfHycTCaTt/ar
      q6uLZury7SABKDDf+dG/UrFvb97aP17t4Uc//GHe2i82EoAC4/S4aTp0MG/t6+YW89Z2MZJb
      IYSmFdUWIBQK8Zvf/AaPx0NnZydnz56loqKCU6dOcfr0aSwWC88888xdzzML8VlFFYALFy7w
      9NNPU1tbSzqd5sUXX+R3v/sdFy9e5PDhw3R0dOzszMOi6BTV2nL7Xpif/exnRCIRTp8+jdls
      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
      xf8D1h6TOLHN90MAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Toronto Bike thefts' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Year' width='192'>
      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
      ZAAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
